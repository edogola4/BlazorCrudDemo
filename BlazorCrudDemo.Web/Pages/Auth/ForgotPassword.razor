@page "/auth/forgot-password"
@using BlazorCrudDemo.Web.Services
@using BlazorCrudDemo.Shared.DTOs
@using Microsoft.AspNetCore.Authorization
@inject IAuthenticationService AuthenticationService
@inject NavigationManager Navigation

<PageTitle>Forgot Password</PageTitle>

<div class="auth-card card">
    <div class="auth-header card-header">
        <h4 class="mb-0"><i class="bi bi-key me-2"></i>Reset Password</h4>
    </div>
    <div class="auth-body card-body">
        @if (resetRequested)
        {
            <div class="alert alert-success">
                <i class="bi bi-check-circle me-2"></i>
                <h6>Password Reset Requested</h6>
                <p>We've sent a password reset link to your email address. Please check your email and follow the instructions to reset your password.</p>
            </div>

            <div class="text-center">
                <a href="/auth/login" class="btn btn-primary">Back to Login</a>
            </div>
        }
        else
        {
            @if (!string.IsNullOrEmpty(errorMessage))
            {
                <div class="alert alert-danger">
                    <i class="bi bi-exclamation-triangle me-2"></i>@errorMessage
                </div>
            }

            <div class="mb-3">
                <p class="text-muted">
                    Enter your email address and we'll send you a link to reset your password.
                </p>
            </div>

            <EditForm Model="resetModel" OnValidSubmit="HandlePasswordReset">
                <DataAnnotationsValidator />
                <ValidationSummary />

                <div class="mb-3">
                    <label for="email" class="form-label">Email Address</label>
                    <InputText id="email" class="form-control" @bind-Value="resetModel.Email" placeholder="Enter your email address" />
                    <ValidationMessage For="@(() => resetModel.Email)" />
                </div>

                <div class="d-grid">
                    <button type="submit" class="btn btn-primary btn-auth" disabled="@isLoading">
                        @if (isLoading)
                        {
                            <span class="spinner-border spinner-border-sm me-2" role="status"></span>
                        }
                        Send Reset Link
                    </button>
                </div>
            </EditForm>

            <div class="auth-links">
                <span>Remember your password? </span>
                <a href="/auth/login" class="text-decoration-none">Login here</a>
            </div>
        }
    </div>
</div>

@code {
    private ResetPasswordDto resetModel = new();
    private bool isLoading = false;
    private bool resetRequested = false;
    private string? errorMessage;

    protected override async Task OnInitializedAsync()
    {
        // Check if user is already authenticated
        var isAuthenticated = await AuthenticationService.IsAuthenticatedAsync();
        if (isAuthenticated)
        {
            Navigation.NavigateTo("/");
            return;
        }
    }

    private async Task HandlePasswordReset()
    {
        isLoading = true;
        errorMessage = null;

        try
        {
            var success = await AuthenticationService.ResetPasswordAsync(resetModel.Email);

            if (success)
            {
                resetRequested = true;
            }
            else
            {
                errorMessage = "Unable to send password reset email. Please check your email address and try again.";
            }
        }
        catch (Exception ex)
        {
            errorMessage = "An unexpected error occurred. Please try again.";
        }
        finally
        {
            isLoading = false;
        }
    }
}
