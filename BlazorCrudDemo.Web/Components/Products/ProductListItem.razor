@using System.Globalization
@using BlazorCrudDemo.Web.Utilities

<div class="product-list-item list-group-item p-0 border-0 mb-3">
    <div class="row g-0">
        <!-- Product Image -->
        <div class="col-md-3">
            <div class="position-relative" style="height: 200px; overflow: hidden;">
                <img src="@(string.IsNullOrEmpty(Product.ImageUrl) ? "data:image/svg+xml,%3Csvg width='300' height='200' xmlns='http://www.w3.org/2000/svg'%3E%3Crect width='100%25' height='100%25' fill='%23f0f0f0'/%3E%3Ctext x='50%25' y='50%25' font-family='Arial, sans-serif' font-size='14' fill='%23666' text-anchor='middle' dy='0.3em'%3ENo Image%3C/text%3E%3C/svg%3E" : Product.ImageUrl)" 
                     class="img-fluid rounded-start h-100 w-100" 
                     alt="@Product.Name"
                     style="object-fit: cover;"
                     loading="lazy" />
                
                @if (Product.StockQuantity <= 0)
                {
                    <div class="position-absolute top-0 start-0 m-2">
                        <span class="badge bg-danger">Out of Stock</span>
                    </div>
                }
                else if (Product.StockQuantity < 10)
                {
                    <div class="position-absolute top-0 start-0 m-2">
                        <span class="badge bg-warning text-dark">Only @Product.StockQuantity left</span>
                    </div>
                }
                
                @if (Product.OriginalPrice > Product.Price)
                {
                    var discount = 100 - (Product.Price * 100 / Product.OriginalPrice);
                    <div class="position-absolute top-0 end-0 m-2">
                        <span class="badge bg-success">@discount.ToString("0")% OFF</span>
                    </div>
                }
            </div>
        </div>
        
        <!-- Product Details -->
        <div class="col-md-6">
            <div class="card-body h-100 d-flex flex-column">
                <div class="d-flex justify-content-between align-items-start mb-2">
                    <h5 class="card-title mb-1">
                        <a href="/products/@Product.Id" class="text-decoration-none text-dark">
                            @Product.Name
                        </a>
                    </h5>
                    <div class="favorite-icon" @onclick="ToggleFavorite">
                        <i class="@(IsFavorite ? "fas" : "far") fa-heart text-danger"></i>
                    </div>
                </div>
                
                <div class="mb-2">
                    <span class="badge bg-light text-dark">@Product.Category</span>
                    @if (Product.Tags?.Any() == true)
                    {
                        foreach (var tag in Product.Tags.Take(2))
                        {
                            <span class="badge bg-light text-muted">@tag</span>
                        }
                    }
                </div>
                
                <div class="product-rating mb-2">
                    @for (int i = 1; i <= 5; i++)
                    {
                        <i class="fas fa-star @(i <= Math.Max(Product.Rating, 0m) ? "text-warning" : "text-muted")"></i>
                    }
                    <small class="text-muted ms-1">(@Product.ReviewCount)</small>
                </div>
                
                <p class="card-text text-muted flex-grow-1">
                    @(Product.Description?.Length > 200 ? Product.Description.Substring(0, 200) + "..." : Product.Description)
                </p>
                
                <div class="d-flex align-items-center">
                    @if (Product.IsActive)
                    {
                        <span class="text-success small me-3">
                            <i class="fas fa-check-circle"></i> In Stock
                        </span>
                    }
                    else
                    {
                        <span class="text-danger small me-3">
                            <i class="fas fa-times-circle"></i> Out of Stock
                        </span>
                    }
                    
                    <div class="product-price">
                        <span class="current-price fw-bold">@CurrencyFormatter.FormatPrice(Product.Price)</span>
                        @if (Product.OriginalPrice > Product.Price)
                        {
                            <span class="original-price text-muted text-decoration-line-through ms-2">
                                @CurrencyFormatter.FormatPrice(Product.OriginalPrice)
                            </span>
                        }
                    </div>
                </div>
            </div>
        </div>
        
        <!-- Action Buttons -->
        <div class="col-md-3">
            <div class="card-body h-100 d-flex flex-column justify-content-center">
                @if (Product.StockQuantity > 0)
                {
                    <div class="d-grid gap-2">
                        <button class="btn btn-primary" @onclick="BuyNow">
                            <i class="fas fa-bolt me-1"></i> Buy Now
                        </button>
                        <button class="btn btn-outline-secondary" @onclick="AddToCart">
                            <i class="fas fa-shopping-cart me-1"></i> Add to Cart
                        </button>
                    </div>
                }
                else
                {
                    <div class="text-center">
                        <button class="btn btn-outline-secondary w-100" disabled>
                            Notify When Available
                        </button>
                    </div>
                }
                
                <div class="mt-3 text-center">
                    <a href="#" class="text-decoration-none small" @onclick:preventDefault>
                        <i class="far fa-heart me-1"></i> Add to Wishlist
                    </a>
                    <span class="mx-2 text-muted">|</span>
                    <a href="#" class="text-decoration-none small" @onclick:preventDefault>
                        <i class="fas fa-exchange-alt me-1"></i> Compare
                    </a>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter] public Product Product { get; set; } = new();
    [Parameter] public EventCallback<Product> OnAddToCart { get; set; }
    [Parameter] public EventCallback<Product> OnBuyNow { get; set; }
    [Parameter] public EventCallback<Product> OnToggleFavorite { get; set; }
    
    private bool IsFavorite { get; set; }
    
    private async Task AddToCart()
    {
        await OnAddToCart.InvokeAsync(Product);
    }
    
    private async Task BuyNow()
    {
        await OnBuyNow.InvokeAsync(Product);
    }
    
    private async Task ToggleFavorite()
    {
        IsFavorite = !IsFavorite;
        await OnToggleFavorite.InvokeAsync(Product);
    }
}

<style>
    .product-list-item {
        transition: transform 0.2s ease, box-shadow 0.2s ease;
        border: 1px solid rgba(0, 0, 0, 0.1) !important;
        border-radius: 0.5rem !important;
        overflow: hidden;
    }
    
    .product-list-item:hover {
        transform: translateY(-2px);
        box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.1) !important;
    }
    
    .favorite-icon {
        cursor: pointer;
        font-size: 1.25rem;
        transition: transform 0.2s ease;
    }
    
    .favorite-icon:hover {
        transform: scale(1.1);
    }
    
    .product-price {
        font-size: 1.25rem;
    }
    
    .current-price {
        color: #198754;
        font-weight: 600;
    }
    
    .original-price {
        font-size: 0.9rem;
    }
    
    .product-rating {
        color: #ffc107;
    }
    
    .card-title a {
        transition: color 0.2s ease;
    }
    
    .card-title a:hover {
        color: #0d6efd !important;
    }
    
    /* Responsive adjustments */
    @@media (max-width: 767.98px) {
        .product-list-item {
            margin-bottom: 1.5rem;
        }
        
        .col-md-3, 
        .col-md-6,
        .col-md-3 {
            width: 100%;
        }
        
        .product-list-item .row > [class*="col-"] {
            padding: 0.5rem 1rem;
        }
        
        .product-list-item .img-fluid {
            border-radius: 0.5rem 0.5rem 0 0 !important;
        }
    }
    
    @@media (min-width: 768px) and (max-width: 991.98px) {
        .product-list-item .col-md-3,
        .product-list-item .col-md-6 {
            padding: 1rem;
        }
    }
</style>
